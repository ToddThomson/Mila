name: Documentation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz build-essential cmake ninja-build
          sudo apt-get install -y libgtest-dev
      
      # Use NVIDIA's CUDA action instead of manual installation
      - name: Setup CUDA
        uses: Jimver/cuda-toolkit@v0.2.23
        with:
          cuda: '12.8.1'
          method: 'network'
          #sub-packages: '["nvcc", "cudart", "cublas", "cublaslt", "nvml"]'
      
      - name: Verify CUDA installation
        run: |
          nvcc --version
          echo "CUDA_PATH: $CUDA_PATH"
          ls -la $CUDA_PATH/bin
          ls -la $CUDA_PATH/lib64 || echo "lib64 not found"
          ls -la $CUDA_PATH/lib || echo "lib not found"
      
      - name: Install miniz dependency
        run: |
          git clone https://github.com/richgel999/miniz.git
          cd miniz
          cmake -B build -G Ninja
          cmake --build build --config Release
          sudo cmake --install build
        
      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_CUDA_COMPILER=$CUDA_PATH/bin/nvcc \
                -DCMAKE_CUDA_FLAGS="--allow-unsupported-compiler" \
                -DCMAKE_CXX_SCAN_FOR_MODULES=YES
        env:
          CUDACXX: ${{ env.CUDA_PATH }}/bin/nvcc
          
      - name: Generate Documentation
        run: cmake --build ${{github.workspace}}/build --target docs
        
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ${{github.workspace}}/docs
          branch: gh-pages
